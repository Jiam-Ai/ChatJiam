
import React, { useState } from 'react';
import type { ImageContent } from '../types';

interface ImageSliderProps {
  images: ImageContent[];
  onImageClick: (url: string) => void;
}

const ImageSlider: React.FC<ImageSliderProps> = ({ images, onImageClick }) => {
  const [currentIndex, setCurrentIndex] = useState(0);

  const goToPrevious = () => {
    const isFirstSlide = currentIndex === 0;
    const newIndex = isFirstSlide ? images.length - 1 : currentIndex - 1;
    setCurrentIndex(newIndex);
  };

  const goToNext = () => {
    const isLastSlide = currentIndex === images.length - 1;
    const newIndex = isLastSlide ? 0 : currentIndex + 1;
    setCurrentIndex(newIndex);
  };
  
  if (!images || images.length === 0) return null;

  return (
    <div className="relative w-full max-w-sm aspect-square rounded-lg overflow-hidden group">
      <div className="w-full h-full flex transition-transform duration-500 ease-in-out" style={{ transform: `translateX(-${currentIndex * 100}%)` }}>
        {images.map((image, index) => (
          <div key={index} className="relative flex-shrink-0 w-full h-full">
            <img 
              src={image.blobUrl} 
              alt={`Generated by ${image.apiName}`} 
              className="w-full h-full object-cover cursor-pointer"
              onClick={() => onImageClick(image.blobUrl)}
            />
            <div className="absolute bottom-2 left-2 bg-black/60 text-white px-2 py-1 rounded text-xs font-bold uppercase pointer-events-none">
              {image.apiName}
            </div>
          </div>
        ))}
      </div>
      
      {images.length > 1 && (
        <>
            <button onClick={goToPrevious} className="absolute top-1/2 -translate-y-1/2 left-2 w-10 h-10 rounded-full bg-black/50 text-white flex items-center justify-center text-2xl opacity-0 group-hover:opacity-100 transition-opacity z-10">❮</button>
            <button onClick={goToNext} className="absolute top-1/2 -translate-y-1/2 right-2 w-10 h-10 rounded-full bg-black/50 text-white flex items-center justify-center text-2xl opacity-0 group-hover:opacity-100 transition-opacity z-10">❯</button>
            <div className="absolute bottom-2 left-1/2 -translate-x-1/2 flex gap-2 z-10">
                {images.map((_, index) => (
                    <div key={index} className={`w-2.5 h-2.5 rounded-full transition-colors ${currentIndex === index ? 'bg-white' : 'bg-white/50'}`}></div>
                ))}
            </div>
        </>
      )}
    </div>
  );
};

export default ImageSlider;